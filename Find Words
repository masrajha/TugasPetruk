#include<iostream>
#include<cstring>
using namespace std;
    	int main(){
	char kata[15];
	int jmlh,pjg_kata[jmlh];
	char kata1[jmlh][15];
	char kata2[15][15] =	{{'t','g','b','w','w','i','n','t','e','r','w','s','e','s','n'},
			{'a','a','u','n','t','t','m','m','h','f','o','o','d','n','b'},
			{'j','l','w','c','q','l','d','z','m','p','m','v','d','m','r'},
			{'a','s','a','g','m','q','u','w','v','v','b','s','o','h','i'},
			{'b','w','p','l','o','t','a','n','a','d','t','p','g','n','c'},
			{'r','e','w','n','g','o','d','j','c','p','n','a','t','n','k'},
			{'e','e','o','t','w','o','s','b','q','h','a','r','r','s','a'},
			{'a','z','c','g','e','s','w','e','w','n','a','k','n','p','b'},
			{'d','i','n','n','e','r','q','o','d','l','w','d','c','a','r'},
			{'o','n','o','p','k','w','m','p','a','r','k','t','z','c','c'},
			{'q','b','f','r','o','g','m','a','m','w','p','w','e','e','y'},
			{'l','q','z','q','n','n','m','r','z','j','j','s','c','l','g'},
			{'m','o','s','g','z','c','z','d','t','d','b','o','o','t','o'},
			{'p','d','c','r','z','m','s','n','g','r','d','n','r','p','z'},
			{'o','h','n','k','z','w','a','t','e','r','j','g','t','r','a'}
			};
			
	                for(int i=0;i<15;i++) {
			for(int j=0;j<15;j++) {
			    cout<<kata2[i][j]<<" ";
			} cout<<endl;
			} cout<<endl;
			// jumlah kata yang dicari
				cout<<"\n\nJumlah kata yang ingin dicari : "; cin>>jmlh;
					for(int i=0;i<jmlh;i++) {
        				cout<<"Masukkan kata : ";cin>>kataa[jmlh];
        			pjg_kata[i]=strlen(kataa[i]);    //Menghitung jumlah huruf pada kata
    			}	
			// Mencari Kata
    				int flag=0,flag2=0;
    				for(int m=0;m<jmlh;m++){
       					for(int i=0;i<15;i++){
            				for(int j=0;j<15;j++){
                				if(kataa[m][0]==kata2[i][j]){
			// Diagonal kanan bawah
                    for(int k=0;k<pjg_kata[m];k++){
                        if(kata1[m][k]==kata2[i+k][j+k]){
                            flag=k;
                        }else
                            break;
                    }
                    if(flag == (pjg_kata[m]-1)) {
                        flag2 +=1;
                    } else {
                        flag2 +=0;
                    }
                    flag=0;
			// Diagonal kanan atas
                    for(int k=0;k<pjg_kata[m];k++){
                        if(kata1[m][k]==kata2[i-k][j+k]){
                            flag=k;
                        }else
                            break;
                    }
                    if(flag == (pjg_kata[m]-1)) {
                        flag2 +=1;
                    } else {
                        flag2 +=0;
                    }
		    } else {
                        flag2 +=0;
                    }
                    flag=0;
                    	// Diagonal kiri atas
                    for(int k=0;k<pjg_kata[m];k++){
                        if(kata1[m][k]==kata2[i-k][j-k]){
                            flag=k;
                        }else
                            break;
                    }
                    if(flag == (pjg_kata[m]-1)) {
                        flag2 +=1;
                    } else {
                        flag2 +=0;
                    }
                    flag=0;
                    	// Diagonal kiri bawah
                    for(int k=0;k<pjg_kata[m];k++){
                        if(kata1[m][k]==kata2[i+k][j-k]){
                            flag=k;
                        }else
                            break;
                    }
                    if(flag == (pjg_kata[m]-1)) {
                        flag2 +=1;
                    } else {
                        flag2 +=0;
                    }
